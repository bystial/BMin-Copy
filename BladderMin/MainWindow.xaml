<Window x:Class="VMS.TPS.ScriptWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        x:Name="BladderMinWindow"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VMS.TPS"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:converters="clr-namespace:VMS.TPS.Converters"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=local:ViewModel, IsDesignTimeCreatable=True}"
        Title="BladderMin v1.1" Height="550" Width="450" ResizeMode="NoResize">

    <Window.Resources>
        <converters:VisibilityConverter x:Key="VisibilityConverter"/>
        <converters:BoolToString x:Key="BoolToString"/>

        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" BorderThickness="1" Padding="3,2" BorderBrush="Transparent" CornerRadius="3" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="118.36"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="65"/>
        </Grid.RowDefinitions>

        <!-- Display plan data -->
        <Grid Grid.Row="0" Margin="10,0,10,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Orientation="Horizontal">
                <Label Content="Current plan:" FontSize="14" FontWeight="Normal" VerticalContentAlignment="Center" Style="{x:Null}"/>
                <TextBlock Text="{Binding PlanId, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </StackPanel>
            <StackPanel Grid.Row="1" Orientation="Horizontal">
                <Label Content="Current structure set:" FontSize="14" FontWeight="Normal" VerticalContentAlignment="Center" Style="{x:Null}"/>
                <TextBlock Text="{Binding StructureSetId, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </StackPanel>
            <Border Grid.Row="2" Background="Black" Height="1.5" HorizontalAlignment="Stretch" Margin="0,5,5,10"/>
        </Grid>

        <!-- User input section-->
        <Grid Grid.Row="1" Margin="10,5,15,10" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border Grid.Row="0" CornerRadius="5,5,5,5" Background="CornflowerBlue" HorizontalAlignment="Stretch" Height="25">
                <TextBlock Text="Protocol selection" Margin="10,0,0,0" Foreground="White" FontSize="14" FontWeight="Bold" VerticalAlignment="Center"/>
            </Border>
            <StackPanel Grid.Row="1" Orientation="Horizontal">
                <Label Content="Select Protocol:" FontSize="14" FontWeight="Bold" VerticalContentAlignment="Center"/>
                <ComboBox x:Name="ProtocolBox" ItemsSource="{Binding ProtocolList, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedProtocol, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                          DisplayMemberPath="Name" VerticalAlignment="Center" MinWidth="100" Margin="0,5,0,5" />
            </StackPanel>
            <StackPanel Grid.Row="2" Orientation="Horizontal" Visibility="{Binding PlanSumSelectionVisibility, UpdateSourceTrigger=PropertyChanged}">
                <Label Content="Select Plan Sum:" FontSize="14" FontWeight="Bold" VerticalContentAlignment="Center"/>
                <ComboBox ItemsSource="{Binding PlanSumList, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"  SelectedItem="{Binding SelectedPlanSum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  VerticalAlignment="Center" MinWidth="100" Margin="0,5,0,5"/>
            </StackPanel>
            <StackPanel Grid.Row="3" Orientation="Horizontal" >
                <Label Content="Select Bladder Contour:" FontSize="14" FontWeight="Bold" VerticalContentAlignment="Center"/>
                <ComboBox ItemsSource="{Binding StructureList, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedBladderContour, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" MinWidth="100" Margin="0,5,0,5"/>
            </StackPanel>
            <StackPanel Grid.Row="4" Orientation="Horizontal" Visibility="{Binding NodalSelectionVisibility, UpdateSourceTrigger=PropertyChanged}">
                <Label Content="Nodes/Pelvis Treated?" FontSize="14" FontWeight="Bold" VerticalContentAlignment="  Center"/>
                <CheckBox VerticalAlignment="Center" IsChecked="{Binding IsNodesSelected, Mode=TwoWay}" Style="{x:Null}" />
            </StackPanel>
            <Border Grid.Row="5" Background="Black" Height="1.5" HorizontalAlignment="Stretch" Margin="0,5,5,5"/>
        </Grid>

        <!-- Constraint Summary space-->
        <Grid Grid.Row="2" Margin="5,0,15,10" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Border Grid.Row="0" CornerRadius="5,5,5,5" Background="CornflowerBlue" HorizontalAlignment="Stretch" Height="25">
                <TextBlock Text="Constraint Summary" Margin="10,0,0,0" Foreground="White" FontSize="14" FontWeight="Bold" VerticalAlignment="Center"/>
            </Border>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>

                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <ListView Grid.Column="0" BorderThickness="0" ItemsSource="{Binding ProtocolConstraintsList, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" AlternationCount="2" Foreground="Black" FontSize="14" Margin="0,0,-5,0">
                    <ListView.Style>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListView}">
                                        <ItemsPresenter/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.Style>


                    <ListView.ItemContainerStyle>
                        <!--Add alternating row colors-->
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="Background" Value="White"/>
                            <Style.Triggers>
                                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                    <Setter Property="Background" Value="AliceBlue"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
                <ListView Grid.Column="1" BorderThickness="0" AlternationCount="2" ItemsSource="{Binding ConstraintValuesList, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Foreground="Black" FontSize="14" Padding="-10,0,0,0">
                    <ListView.Style>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListView}">
                                        <ItemsPresenter/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.Style>
                    <ListView.ItemContainerStyle>
                        <!--Add alternating row colors-->
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="Background" Value="White"/>
                            <Style.Triggers>
                                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                    <Setter Property="Background" Value="AliceBlue"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </Grid>
            <Border Grid.Row="2" Background="Black" Height="1.5" HorizontalAlignment="Stretch" Margin="0,5,5,5"/>
        </Grid>

        <!--Display Bladdermin volume and margins-->
        <Grid Grid.Row="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Orientation="Horizontal">
                <Label Content="BladderMin volume (cc):" FontSize="14" FontWeight="Bold" VerticalContentAlignment="Center"/>
                <TextBlock Text="{Binding BlaMinVol, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </StackPanel>
            <StackPanel Grid.Row="1" Orientation="Horizontal">
                <Label Content="Sup Margin (mm):" FontSize="14" FontWeight="Bold" VerticalContentAlignment="Center"/>
                <TextBlock Text="{Binding SupMargin, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </StackPanel>
            <StackPanel Grid.Row="2" Orientation="Horizontal">
                <Label Content="Ant Margin (mm):" FontSize="14" FontWeight="Bold" VerticalContentAlignment="Center"/>
                <TextBlock Text="{Binding AntMargin, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </StackPanel>
        </Grid>

        <!--Button-->
        <Grid Grid.Row="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Column="1" Margin="10,0,15,15" CornerRadius="3,3,3,3" Height="30" HorizontalAlignment="Right" VerticalAlignment="Bottom" Background="PapayaWhip">
                <Button Style="{StaticResource ButtonStyle}" Command="{Binding StartCommand}" Width="Auto" IsEnabled="{Binding ButtonEnabled, UpdateSourceTrigger=PropertyChanged}">
                    <TextBlock Text="Create BladderMin!" FontSize="14" FontWeight="Bold" Margin="5,0,5,0" Foreground="Black"/>
                </Button>
            </Border>

            <!-- Progress bar and script status-->
            <Grid Grid.Column="0" HorizontalAlignment="Center" Width="279">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Border Grid.Row="0" CornerRadius="5,5,5,5" Margin="10,0,15,13" Background="{Binding StatusColour}">
                    <TextBlock Text="{Binding StatusMessage, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" FontSize="14" FontWeight="Bold" HorizontalAlignment="Center" TextWrapping="Wrap" Background="Transparent"/>
                </Border>
                <ProgressBar Grid.Row="1" Minimum="0" Maximum="100" Height="15" Margin="10,0,15,-15" 
                         IsIndeterminate="True" Visibility="{Binding ScriptWorking, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}"/>
            </Grid>
        </Grid>
    </Grid>
</Window>